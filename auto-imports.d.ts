/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const Avatar: typeof import('./src/components/ui/avatar/index')['Avatar']
  const AvatarFallback: typeof import('./src/components/ui/avatar/index')['AvatarFallback']
  const AvatarImage: typeof import('./src/components/ui/avatar/index')['AvatarImage']
  const Button: typeof import('./src/components/ui/button/index')['Button']
  const Card: typeof import('./src/components/ui/card/index')['Card']
  const CardContent: typeof import('./src/components/ui/card/index')['CardContent']
  const CardDescription: typeof import('./src/components/ui/card/index')['CardDescription']
  const CardFooter: typeof import('./src/components/ui/card/index')['CardFooter']
  const CardHeader: typeof import('./src/components/ui/card/index')['CardHeader']
  const CardTitle: typeof import('./src/components/ui/card/index')['CardTitle']
  const DropdownMenu: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenu']
  const DropdownMenuCheckboxItem: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuCheckboxItem']
  const DropdownMenuContent: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuContent']
  const DropdownMenuGroup: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuGroup']
  const DropdownMenuItem: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuItem']
  const DropdownMenuLabel: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuLabel']
  const DropdownMenuPortal: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuPortal']
  const DropdownMenuRadioGroup: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuRadioGroup']
  const DropdownMenuRadioItem: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuRadioItem']
  const DropdownMenuSeparator: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuSeparator']
  const DropdownMenuShortcut: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuShortcut']
  const DropdownMenuSub: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuSub']
  const DropdownMenuSubContent: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuSubContent']
  const DropdownMenuSubTrigger: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuSubTrigger']
  const DropdownMenuTrigger: typeof import('./src/components/ui/dropdown-menu/index')['DropdownMenuTrigger']
  const EffectScope: typeof import('vue')['EffectScope']
  const Input: typeof import('./src/components/ui/input/index')['Input']
  const Label: typeof import('./src/components/ui/label/index')['Label']
  const Separator: typeof import('./src/components/ui/separator/index')['Separator']
  const Table: typeof import('./src/components/ui/table/index')['Table']
  const TableBody: typeof import('./src/components/ui/table/index')['TableBody']
  const TableCaption: typeof import('./src/components/ui/table/index')['TableCaption']
  const TableCell: typeof import('./src/components/ui/table/index')['TableCell']
  const TableEmpty: typeof import('./src/components/ui/table/index')['TableEmpty']
  const TableFooter: typeof import('./src/components/ui/table/index')['TableFooter']
  const TableHead: typeof import('./src/components/ui/table/index')['TableHead']
  const TableHeader: typeof import('./src/components/ui/table/index')['TableHeader']
  const TableRow: typeof import('./src/components/ui/table/index')['TableRow']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const avatarVariant: typeof import('./src/components/ui/avatar/index')['avatarVariant']
  const buttonVariants: typeof import('./src/components/ui/button/index')['buttonVariants']
  const computed: typeof import('vue')['computed']
  const content: typeof import('./tailwind.config.js')['content']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const darkMode: typeof import('./tailwind.config.js')['darkMode']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const eslintConfig: typeof import('./eslint.config.js')['default']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const page: typeof import('./src/stores/page')['default']
  const plugins: typeof import('./tailwind.config.js')['plugins']
  const prefix: typeof import('./tailwind.config.js')['prefix']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const safelist: typeof import('./tailwind.config.js')['safelist']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeTo: typeof import('pinia')['storeTo']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const theme: typeof import('./tailwind.config.js')['theme']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const updateHMR: typeof import('pinia')['updateHMR']
  const updateHMRUpdate: typeof import('pinia')['updateHMRUpdate']
  const updateM: typeof import('pinia')['updateM']
  const use: typeof import('./src/stores/loaders/projects.loader')['use']
  const useA: typeof import('./src/stores/auth')['useA']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuthStore: typeof import('./src/stores/auth')['useAuthStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useErrorStore: typeof import('./src/stores/error')['useErrorStore']
  const useFormErrors: typeof import('./src/composables/fromErrors')['useFormErrors']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useModel: typeof import('vue')['useModel']
  const useP: typeof import('./src/stores/loaders/projects.loader')['useP']
  const useProjectStore: typeof import('./src/stores/loaders/projects.loader')['useProjectStore']
  const useProjectsLoaderStore: typeof import('./src/stores/loaders/projects.loader')['useProjectsLoaderStore']
  const useProjectsStore: typeof import('./src/stores/loaders/projects.loader')['useProjectsStore']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const viteConfig: typeof import('./vite.config')['default']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
